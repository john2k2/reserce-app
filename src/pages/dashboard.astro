---
import Layout from '../layouts/Layout.astro';
import { supabase, getProfileByUserId, getClientReservations } from '../lib/supabase';
import type { Profile, Reservation, ReservationStatus } from '../types/database.types';

// Verificar si el usuario está autenticado
const { data: sessionData, error: sessionError } = await supabase.auth.getSession();
const session = sessionData?.session;

// Redireccionar si no hay sesión
if (!session) {
  return Astro.redirect('/login?redirect=/dashboard');
}

// Obtener perfil del usuario
let profile: Profile | null = null;
let error: string | null = null;
let activeReservations: Reservation[] = [];
let historyReservations: Reservation[] = [];

try {
  // Obtener perfil
  const { data: userData, error: userError } = await getProfileByUserId(session.user.id);
  
  if (userError) {
    console.error('Error al obtener perfil:', userError);
    error = 'No se pudo cargar tu perfil. Por favor, intenta de nuevo más tarde.';
  } else if (userData) {
    profile = userData;
    
    // Solo cargar reservas si es un cliente
    if (profile && profile.user_type === 'client') {
      // Obtener reservas activas (pendientes, confirmadas, en progreso)
      const { data: activeData, error: activeError } = await getClientReservations(
        profile && profile.id, 
        ['pending', 'confirmed', 'in_progress']
      );
      
      if (activeError) {
        console.error('Error al obtener reservas activas:', activeError);
      } else if (activeData) {
        activeReservations = activeData;
      }
      
      // Obtener historial de reservas (completadas, canceladas)
      const { data: historyData, error: historyError } = await getClientReservations(
        profile && profile.id, 
        ['completed', 'cancelled']
      );
      
      if (historyError) {
        console.error('Error al obtener historial de reservas:', historyError);
      } else if (historyData) {
        historyReservations = historyData;
      }
    }
  } else {
    // Si el usuario está autenticado pero no tiene perfil, redireccionar para crear perfil
    return Astro.redirect('/create-profile');
  }
} catch (e) {
  console.error('Error al procesar la solicitud:', e);
  error = 'Ha ocurrido un error al cargar los datos. Por favor, intenta de nuevo más tarde.';
}

// Formato de la fecha
function formatDate(dateString: string | null | undefined): string {
  if (!dateString) return 'Fecha no disponible';
  
  const options: Intl.DateTimeFormatOptions = { 
    year: 'numeric', 
    month: 'long', 
    day: 'numeric', 
    hour: '2-digit', 
    minute: '2-digit' 
  };
  return new Date(dateString).toLocaleDateString('es-ES', options);
}

// Color y texto según el estado de la reserva
function getStatusInfo(status: ReservationStatus | string | null | undefined): { color: string; text: string } {
  if (!status) return { color: 'gray', text: 'Desconocido' };
  
  switch (status) {
    case 'pending':
      return { color: 'yellow', text: 'Pendiente' };
    case 'confirmed':
      return { color: 'blue', text: 'Confirmada' };
    case 'in_progress':
      return { color: 'green', text: 'En progreso' };
    case 'completed':
      return { color: 'green', text: 'Completada' };
    case 'cancelled':
      return { color: 'red', text: 'Cancelada' };
    default:
      return { color: 'gray', text: status as string };
  }
}
---

<Layout title="Mi Tablero - QueueMaster">
  <div class="container mx-auto px-4 py-8">
    {error ? (
      <div class="bg-red-50 dark:bg-red-900/20 border-l-4 border-red-500 p-4 mb-8">
        <div class="flex">
          <div class="flex-shrink-0">
            <svg class="h-5 w-5 text-red-500" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.28 7.22a.75.75 0 00-1.06 1.06L8.94 10l-1.72 1.72a.75.75 0 101.06 1.06L10 11.06l1.72 1.72a.75.75 0 101.06-1.06L11.06 10l1.72-1.72a.75.75 0 00-1.06-1.06L10 8.94 8.28 7.22z" clip-rule="evenodd" />
            </svg>
          </div>
          <div class="ml-3">
            <p class="text-sm text-red-700 dark:text-red-200">{error}</p>
          </div>
        </div>
      </div>
    ) : (
      <div>
        <!-- Información de perfil -->
        <div class="flex flex-col md:flex-row items-center md:items-start gap-6 mb-8">
          <div class="w-32 h-32 rounded-full overflow-hidden bg-gray-200 dark:bg-gray-700 flex-shrink-0">
            <img 
              src={profile?.avatar_url || "/avatars/default.jpg"} 
              alt={`Foto de perfil de ${profile?.name || 'Usuario'}`} 
              class="w-full h-full object-cover"
              onerror="this.src='/avatars/default.jpg'; this.onerror=null;"
            />
          </div>
          
          <div class="text-center md:text-left">
            <h1 class="text-3xl font-bold text-gray-900 dark:text-white mb-2">{profile?.name}</h1>
            <p class="text-lg text-gray-600 dark:text-gray-400 mb-4">{profile?.email}</p>
            
            <div class="flex flex-wrap gap-2 justify-center md:justify-start">
              <a 
                href="/profile" 
                class="inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-primary hover:bg-primary-dark focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary"
              >
                <svg xmlns="http://www.w3.org/2000/svg" class="mr-2 h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
                </svg>
                Editar Perfil
              </a>
              
              {profile?.user_type === 'client' && (
                <a 
                  href="/queuers" 
                  class="inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-gray-700 bg-gray-100 hover:bg-gray-200 dark:text-gray-200 dark:bg-gray-700 dark:hover:bg-gray-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500"
                >
                  <svg xmlns="http://www.w3.org/2000/svg" class="mr-2 h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z" />
                  </svg>
                  Buscar Representantes
                </a>
              )}
            </div>
          </div>
        </div>
        
        {profile?.user_type === 'client' ? (
          <div class="space-y-8">
            <!-- Reservas activas -->
            <div class="bg-white dark:bg-gray-800 rounded-lg shadow overflow-hidden">
              <div class="px-6 py-4 border-b border-gray-200 dark:border-gray-700">
                <h2 class="text-xl font-semibold text-gray-900 dark:text-white">Reservas Activas</h2>
              </div>
              
              {activeReservations.length > 0 ? (
                <div class="overflow-x-auto">
                  <table class="min-w-full divide-y divide-gray-200 dark:divide-gray-700">
                    <thead class="bg-gray-50 dark:bg-gray-700">
                      <tr>
                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Servicio</th>
                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Representante</th>
                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Fecha</th>
                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Estado</th>
                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Acciones</th>
                      </tr>
                    </thead>
                    <tbody class="bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700">
                      {activeReservations.map((reservation) => {
                        const statusInfo = getStatusInfo(reservation.status);
                        
                        return (
                          <tr>
                            <td class="px-6 py-4 whitespace-nowrap">
                              <div class="text-sm font-medium text-gray-900 dark:text-white">{reservation.services?.name || 'Servicio no especificado'}</div>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap">
                              <div class="flex items-center">
                                <div class="flex-shrink-0 h-10 w-10 rounded-full overflow-hidden bg-gray-200 dark:bg-gray-700">
                                  <img 
                                    class="h-10 w-10 object-cover" 
                                    src={reservation.profiles?.avatar_url || "/avatars/default.jpg"} 
                                    alt="" 
                                    onerror="this.src='/avatars/default.jpg'; this.onerror=null;"
                                  />
                                </div>
                                <div class="ml-4">
                                  <div class="text-sm font-medium text-gray-900 dark:text-white">{reservation.profiles?.name || 'Representante no especificado'}</div>
                                  <div class="text-sm text-gray-500 dark:text-gray-400">
                                    {reservation.profiles?.rating ? (
                                      <div class="flex items-center">
                                        <svg class="h-4 w-4 text-yellow-500" fill="currentColor" viewBox="0 0 20 20">
                                          <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"></path>
                                        </svg>
                                        <span class="ml-1">{reservation.profiles.rating}</span>
                                      </div>
                                    ) : (
                                      <span>Sin valoraciones</span>
                                    )}
                                  </div>
                                </div>
                              </div>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap">
                              <div class="text-sm text-gray-900 dark:text-white">{formatDate(reservation.date)}</div>
                              <div class="text-sm text-gray-500 dark:text-gray-400">{reservation.location}</div>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap">
                              <span class={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-${statusInfo.color}-100 text-${statusInfo.color}-800 dark:bg-${statusInfo.color}-900 dark:text-${statusInfo.color}-200`}>
                                {statusInfo.text}
                              </span>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                              <a 
                                href={`/reservation/${reservation.id}`} 
                                class="text-primary hover:text-primary-dark dark:text-blue-400 dark:hover:text-blue-300 mr-3"
                              >
                                Ver detalles
                              </a>
                              
                              {reservation.status === 'pending' && (
                                <button 
                                  class="text-red-600 hover:text-red-800 dark:text-red-400 dark:hover:text-red-300"
                                  data-reservation-id={reservation.id}
                                  data-action="cancel"
                                >
                                  Cancelar
                                </button>
                              )}
                              
                              {reservation.status === 'completed' && !reservation.client_rating && (
                                <a 
                                  href={`/rate/${reservation.id}`} 
                                  class="text-yellow-600 hover:text-yellow-800 dark:text-yellow-400 dark:hover:text-yellow-300"
                                >
                                  Valorar
                                </a>
                              )}
                            </td>
                          </tr>
                        );
                      })}
                    </tbody>
                  </table>
                </div>
              ) : (
                <div class="py-8 text-center">
                  <svg xmlns="http://www.w3.org/2000/svg" class="h-12 w-12 mx-auto text-gray-400 dark:text-gray-500 mb-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
                  </svg>
                  <h3 class="text-lg font-medium text-gray-900 dark:text-white mb-1">No tienes reservas activas</h3>
                  <p class="text-gray-500 dark:text-gray-400 mb-4">Comienza buscando un representante para tus gestiones.</p>
                  <a 
                    href="/queuers" 
                    class="inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-primary hover:bg-primary-dark focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary"
                  >
                    Buscar Representantes
                  </a>
                </div>
              )}
            </div>
            
            <!-- Historial de reservas -->
            <div class="bg-white dark:bg-gray-800 rounded-lg shadow overflow-hidden">
              <div class="px-6 py-4 border-b border-gray-200 dark:border-gray-700 flex justify-between items-center">
                <h2 class="text-xl font-semibold text-gray-900 dark:text-white">Historial de Reservas</h2>
                
                {historyReservations.length > 5 && (
                  <a 
                    href="/history" 
                    class="text-sm text-primary hover:text-primary-dark dark:text-blue-400 dark:hover:text-blue-300"
                  >
                    Ver todo
                  </a>
                )}
              </div>
              
              {historyReservations.length > 0 ? (
                <div class="overflow-x-auto">
                  <table class="min-w-full divide-y divide-gray-200 dark:divide-gray-700">
                    <thead class="bg-gray-50 dark:bg-gray-700">
                      <tr>
                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Servicio</th>
                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Representante</th>
                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Fecha</th>
                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Estado</th>
                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Acciones</th>
                      </tr>
                    </thead>
                    <tbody class="bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700">
                      {historyReservations.slice(0, 5).map((reservation) => {
                        const statusInfo = getStatusInfo(reservation.status);
                        
                        return (
                          <tr>
                            <td class="px-6 py-4 whitespace-nowrap">
                              <div class="text-sm font-medium text-gray-900 dark:text-white">{reservation.services?.name || 'Servicio no especificado'}</div>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap">
                              <div class="flex items-center">
                                <div class="flex-shrink-0 h-10 w-10 rounded-full overflow-hidden bg-gray-200 dark:bg-gray-700">
                                  <img 
                                    class="h-10 w-10 object-cover" 
                                    src={reservation.profiles?.avatar_url || "/avatars/default.jpg"} 
                                    alt="" 
                                    onerror="this.src='/avatars/default.jpg'; this.onerror=null;"
                                  />
                                </div>
                                <div class="ml-4">
                                  <div class="text-sm font-medium text-gray-900 dark:text-white">{reservation.profiles?.name || 'Representante no especificado'}</div>
                                  <div class="text-sm text-gray-500 dark:text-gray-400">
                                    {reservation.profiles?.rating ? (
                                      <div class="flex items-center">
                                        <svg class="h-4 w-4 text-yellow-500" fill="currentColor" viewBox="0 0 20 20">
                                          <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"></path>
                                        </svg>
                                        <span class="ml-1">{reservation.profiles.rating}</span>
                                      </div>
                                    ) : (
                                      <span>Sin valoraciones</span>
                                    )}
                                  </div>
                                </div>
                              </div>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap">
                              <div class="text-sm text-gray-900 dark:text-white">{formatDate(reservation.date)}</div>
                              <div class="text-sm text-gray-500 dark:text-gray-400">{reservation.location}</div>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap">
                              <span class={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-${statusInfo.color}-100 text-${statusInfo.color}-800 dark:bg-${statusInfo.color}-900 dark:text-${statusInfo.color}-200`}>
                                {statusInfo.text}
                              </span>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                              <a 
                                href={`/reservation/${reservation.id}`} 
                                class="text-primary hover:text-primary-dark dark:text-blue-400 dark:hover:text-blue-300"
                              >
                                Ver detalles
                              </a>
                            </td>
                          </tr>
                        );
                      })}
                    </tbody>
                  </table>
                </div>
              ) : (
                <div class="py-8 text-center">
                  <svg xmlns="http://www.w3.org/2000/svg" class="h-12 w-12 mx-auto text-gray-400 dark:text-gray-500 mb-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M12 6v6m0 0v6m0-6h6m-6 0H6" />
                  </svg>
                  <h3 class="text-lg font-medium text-gray-900 dark:text-white mb-1">No tienes historial de reservas</h3>
                  <p class="text-gray-500 dark:text-gray-400">Tu historial aparecerá aquí una vez que hayas completado o cancelado alguna reserva.</p>
                </div>
              )}
            </div>
          </div>
        ) : (
          <div class="bg-white dark:bg-gray-800 rounded-lg shadow p-6 text-center">
            <h2 class="text-xl font-semibold text-gray-900 dark:text-white mb-4">Vista de Representante</h2>
            <p class="text-gray-500 dark:text-gray-400 mb-6">Estás viendo el tablero como representante. Puedes gestionar tus servicios y reservas desde el tablero de representante.</p>
            <a 
              href="/queuer-dashboard" 
              class="inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-primary hover:bg-primary-dark focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary"
            >
              Ir al Tablero de Representante
            </a>
          </div>
        )}
      </div>
    )}
  </div>
</Layout>

<script>
  // Función para cancelar una reserva
  async function cancelReservation(reservationId: string) {
    if (!reservationId) return;
    
    const confirmed = confirm('¿Estás seguro que deseas cancelar esta reserva?');
    if (!confirmed) return;
    
    try {
      const response = await fetch(`/api/reservations?id=${reservationId}`, {
        method: 'PATCH',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          status: 'cancelled'
        }),
      });
      
      const data = await response.json();
      
      if (response.ok) {
        alert('Reserva cancelada con éxito');
        // Recargar la página para ver los cambios
        window.location.reload();
      } else {
        alert(`Error al cancelar la reserva: ${data.message || 'Se produjo un error inesperado'}`);
      }
    } catch (error) {
      console.error('Error al cancelar la reserva:', error);
      alert('Se produjo un error al cancelar la reserva. Por favor, intenta de nuevo más tarde.');
    }
  }
  
  // Agregar event listeners para los botones de cancelar
  document.addEventListener('DOMContentLoaded', function() {
    document.querySelectorAll('[data-action="cancel"]').forEach(button => {
      button.addEventListener('click', function(this: HTMLElement) {
        const reservationId = this.getAttribute('data-reservation-id');
        if (reservationId) {
          cancelReservation(reservationId);
        }
      });
    });
  });
</script> 