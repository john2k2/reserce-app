---
// Reusable button component
interface Props {
  type?: 'button' | 'submit' | 'reset';
  variant?: 'primary' | 'secondary' | 'outline' | 'link';
  size?: 'sm' | 'md' | 'lg';
  href?: string;
  disabled?: boolean;
  class?: string;
  id?: string;
  ariaLabel?: string;
  isIcon?: boolean;
}

const {
  type = 'button',
  variant = 'primary',
  size = 'md',
  href,
  disabled = false,
  class: className = '',
  id,
  ariaLabel,
  isIcon = false
} = Astro.props;

// Base classes for all buttons
let classes = `font-medium rounded-md transition-colors duration-200 ${className}`;

// Add variant-specific classes
switch (variant) {
  case 'primary':
    classes += ' bg-blue-600 hover:bg-blue-700 text-white';
    break;
  case 'secondary':
    classes += ' bg-gray-200 hover:bg-gray-300 text-gray-800 dark:bg-gray-700 dark:hover:bg-gray-600 dark:text-gray-200';
    break;
  case 'outline':
    classes += ' border border-gray-300 hover:bg-gray-100 text-gray-700 dark:border-gray-600 dark:hover:bg-gray-700 dark:text-gray-200';
    break;
  case 'link':
    classes += ' text-blue-600 hover:text-blue-800 dark:text-blue-400 dark:hover:text-blue-300 underline';
    break;
}

// Add size-specific classes
if (!isIcon) {
  switch (size) {
    case 'sm':
      classes += ' px-2 py-1 text-sm';
      break;
    case 'md':
      classes += ' px-4 py-2';
      break;
    case 'lg':
      classes += ' px-5 py-3 text-lg';
      break;
  }
} else {
  switch (size) {
    case 'sm':
      classes += ' p-1';
      break;
    case 'md':
      classes += ' p-2';
      break;
    case 'lg':
      classes += ' p-3';
      break;
  }
}

// Handle disabled state
if (disabled) {
  classes += ' opacity-50 cursor-not-allowed';
}
---

{href ? (
  <a 
    href={disabled ? '#' : href} 
    class={classes} 
    id={id} 
    aria-label={ariaLabel}
    role="button"
    tabindex={disabled ? '-1' : '0'}
    {...disabled && { 'aria-disabled': 'true' }}
  >
    <slot />
  </a>
) : (
  <button 
    type={type} 
    class={classes} 
    id={id} 
    disabled={disabled} 
    aria-label={ariaLabel}
  >
    <slot />
  </button>
)} 