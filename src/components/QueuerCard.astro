---
// Component for displaying a single queuer card
import Button from './ui/Button.astro';
import { cleanUUID } from '../lib/utils';

interface Props {
  queuer: {
    id: string;
    name: string;
    avatar_url: string | null;
    rating: number | null;
    completed_queues: number | null;
    city: string | null;
    rate_per_hour: number | null;
    speciality: string | null;
    is_verified: boolean;
    description?: string;
  }
}

const { queuer } = Astro.props;

// Clean and encode the ID for URL usage
let profileUrl = '#';
try {
  const cleanedId = cleanUUID(queuer.id);
  if (cleanedId) {
    profileUrl = `/queuer/${encodeURIComponent(cleanedId)}`;
  }
} catch (e) {
  console.error('Error processing queuer ID:', e);
}

// If the URL is still '#', it means we couldn't process the ID correctly
const isValidUrl = profileUrl !== '#';
---

<div class="bg-white dark:bg-gray-800 p-4 rounded-lg shadow flex flex-col md:flex-row gap-4 transition-all duration-300 hover:shadow-lg animate-fade-in">
  <div class="flex-shrink-0">
    <img
      src={queuer.avatar_url || '/images/default-avatar.png'}
      alt={queuer.name}
      class="w-24 h-24 rounded-full object-cover border-2 border-gray-200 dark:border-gray-700 hover-scale"
      loading="lazy"
    />
  </div>
  <div class="flex-grow">
    <div class="flex flex-col md:flex-row md:justify-between md:items-start mb-2">
      <div>
        <h2 class="text-xl font-bold group">
          {queuer.name}
          {queuer.is_verified && (
            <span class="ml-2 text-blue-500 text-sm inline-flex items-center transition-all duration-200">
              <i class="fas fa-check-circle mr-1"></i> 
              <span class="opacity-0 group-hover:opacity-100 transition-opacity duration-200">Verificado</span>
            </span>
          )}
        </h2>
        <p class="text-gray-600 dark:text-gray-400">
          {queuer.city || 'Sin ubicación'}
          {queuer.speciality && ` • ${queuer.speciality}`}
        </p>
      </div>
      <div class="mt-2 md:mt-0 flex flex-col items-end">
        <div class="flex items-center mb-1">
          <span class="text-yellow-500 mr-1">
            <i class="fas fa-star"></i>
          </span>
          <span>{queuer.rating?.toFixed(1) || 'Sin calificaciones'}</span>
        </div>
        <p class="text-sm text-gray-600 dark:text-gray-400">
          {queuer.completed_queues || 0} queues completados
        </p>
        {queuer.rate_per_hour && (
          <p class="font-semibold mt-1">${queuer.rate_per_hour}/hora</p>
        )}
      </div>
    </div>
    <p class="text-gray-700 dark:text-gray-300 mb-4">
      {queuer.description || 'Este representante aún no ha agregado una descripción.'}
    </p>
    <div class="mt-auto">
      {isValidUrl ? (
        <Button 
          href={profileUrl}
          variant="primary"
          class="w-full sm:w-auto px-6 py-2 flex items-center justify-center"
        >
          <span>Ver perfil</span>
          <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="ml-2">
            <path d="M5 12h14"></path>
            <path d="m12 5 7 7-7 7"></path>
          </svg>
        </Button>
      ) : (
        <p class="text-red-500 text-sm">Error: ID de perfil inválido</p>
      )}
    </div>
  </div>
</div> 