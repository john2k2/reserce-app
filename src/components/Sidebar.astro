---
import { getSession, supabase } from '../lib/supabase.ts';

// Obtener la ruta actual
const currentPath = Astro.url.pathname;

// Verificar si el usuario está autenticado
const { data: sessionData } = await getSession();
const isAuthenticated = !!sessionData?.session;

// Obtener el tipo de usuario si está autenticado
let userType = null;
let userName = "Usuario";
let userAvatar = "/avatars/default.jpg";

if (isAuthenticated && sessionData?.session) {
  const { data: userData } = await supabase
    .from('profiles')
    .select('user_type, name, avatar_url')
    .eq('user_id', sessionData.session.user.id)
    .single();
  
  if (userData) {
    userType = userData.user_type;
    userName = userData.name || "Usuario";
    userAvatar = userData.avatar_url || "/avatars/default.jpg";
  }
}

// Menú principal
const menuItems = [
  { 
    icon: "home", 
    label: "Inicio", 
    href: "/", 
    active: currentPath === '/' 
  },
  { 
    icon: "clock", 
    label: "Mis reservas", 
    href: "/my-reservations", 
    active: currentPath === '/my-reservations',
    requiresAuth: true,
    userType: 'client'
  },
  { 
    icon: "layout", 
    label: "Panel de representante", 
    href: "/queuer-dashboard", 
    active: currentPath === '/queuer-dashboard',
    requiresAuth: true,
    userType: 'queuer'
  },
  { 
    icon: "users", 
    label: "Representantes", 
    href: "/queuers", 
    active: currentPath === '/queuers' || currentPath.startsWith('/queuers/')
  },
  { 
    icon: "map-pin", 
    label: "Ubicaciones", 
    href: "/locations", 
    active: currentPath === '/locations' || currentPath.startsWith('/locations/')
  },
  { 
    icon: "credit-card", 
    label: "Pagos", 
    href: isAuthenticated ? "/payments" : "/login?redirect=/payments", 
    active: currentPath === '/payments',
    requiresAuth: true 
  },
];

// Categorías
const categories = [
  {
    name: "Servicios",
    items: ["Conciertos", "Eventos deportivos", "Trámites", "Lanzamientos"]
  },
  {
    name: "Ciudades",
    items: ["Bogotá", "Medellín", "Cali", "Barranquilla"]
  }
];
---

<div class="h-full bg-white dark:bg-gray-800 rounded-lg shadow-sm p-4 sm:p-6" role="navigation" aria-label="Menú principal">
  <!-- Logo y marca -->
  <div class="flex items-center mb-6 sm:mb-8">
    <div class="w-10 h-10 bg-primary rounded-lg flex items-center justify-center text-white font-bold text-xl" aria-hidden="true">Q</div>
    <div class="ml-3">
      <h1 class="text-xl font-bold text-gray-900 dark:text-white">QueueMaster</h1>
      <p class="text-xs text-gray-500 dark:text-gray-400">Nunca más hagas fila</p>
    </div>
  </div>
  
  <!-- Menú principal -->
  <div class="mb-6 sm:mb-8">
    <h2 id="menu-principal" class="text-xs uppercase text-gray-400 dark:text-gray-300 font-medium mb-3 sm:mb-4">Menú</h2>
    <ul class="space-y-1 sm:space-y-2" aria-labelledby="menu-principal">
      {menuItems.map(item => {
        // Determine if we should show this menu item based on auth status and user type
        const shouldShow = !item.requiresAuth || (item.requiresAuth && isAuthenticated);
        const matchesUserType = !item.userType || (item.userType && item.userType === userType);
        
        return shouldShow && matchesUserType && (
          <li>
            <a 
              href={item.href} 
              class={`flex items-center px-3 sm:px-4 py-2 sm:py-2.5 rounded-lg text-sm font-medium transition-colors focus:outline-none focus:ring-2 focus:ring-primary dark:focus:ring-blue-400 ${
                item.active 
                  ? "bg-primary text-white" 
                  : "text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700"
              }`}
              aria-current={item.active ? "page" : undefined}
            >
              <span class="w-5 h-5 mr-3 flex-shrink-0" aria-hidden="true">
                <svg 
                  xmlns="http://www.w3.org/2000/svg" 
                  width="18" 
                  height="18" 
                  viewBox="0 0 24 24" 
                  fill="none" 
                  stroke="currentColor" 
                  stroke-width="2" 
                  stroke-linecap="round" 
                  stroke-linejoin="round"
                >
                  {item.icon === "home" && (
                    <path d="M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z"></path>
                  )}
                  {item.icon === "clock" && (
                    <>
                      <circle cx="12" cy="12" r="10"></circle>
                      <polyline points="12 6 12 12 16 14"></polyline>
                    </>
                  )}
                  {item.icon === "layout" && (
                    <>
                      <rect x="3" y="3" width="18" height="18" rx="2" ry="2"></rect>
                      <line x1="3" y1="9" x2="21" y2="9"></line>
                      <line x1="9" y1="21" x2="9" y2="9"></line>
                    </>
                  )}
                  {item.icon === "users" && (
                    <>
                      <path d="M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"></path>
                      <circle cx="9" cy="7" r="4"></circle>
                      <path d="M23 21v-2a4 4 0 0 0-3-3.87"></path>
                      <path d="M16 3.13a4 4 0 0 1 0 7.75"></path>
                    </>
                  )}
                  {item.icon === "map-pin" && (
                    <>
                      <path d="M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z"></path>
                      <circle cx="12" cy="10" r="3"></circle>
                    </>
                  )}
                  {item.icon === "credit-card" && (
                    <>
                      <rect x="1" y="4" width="22" height="16" rx="2" ry="2"></rect>
                      <line x1="1" y1="10" x2="23" y2="10"></line>
                    </>
                  )}
                </svg>
              </span>
              {item.label}
            </a>
          </li>
        )
      })}
    </ul>
  </div>
  
  <!-- Categorías -->
  <div class="space-y-5 sm:space-y-6">
    {categories.map((category, index) => (
      <div class="mb-5 sm:mb-6">
        <h2 id={`categoria-${index}`} class="text-xs uppercase text-gray-400 dark:text-gray-300 font-medium mb-3 sm:mb-4">{category.name}</h2>
        <ul class="space-y-1 sm:space-y-2" aria-labelledby={`categoria-${index}`}>
          {category.items.map(item => (
            <li>
              <a 
                href={`/search?category=${encodeURIComponent(category.name.toLowerCase())}&q=${encodeURIComponent(item)}`} 
                class="flex items-center text-sm text-gray-700 dark:text-gray-300 hover:text-primary dark:hover:text-primary focus:outline-none focus:ring-2 focus:ring-primary dark:focus:ring-blue-400 rounded py-1 px-2" 
                aria-label={`Ver ${item}`}
              >
                <span class="w-2 h-2 bg-gray-300 dark:bg-gray-500 rounded-full mr-3 flex-shrink-0" aria-hidden="true"></span>
                {item}
              </a>
            </li>
          ))}
        </ul>
      </div>
    ))}
  </div>
  
  
  
  <!-- Botón de soporte -->
  <div class="mt-4 pt-4 border-t border-gray-200 dark:border-gray-700">
    <a 
      href="/support" 
      class="flex items-center text-sm text-primary hover:underline dark:text-blue-400 dark:hover:text-blue-300 focus:outline-none focus:ring-2 focus:ring-primary dark:focus:ring-blue-400 rounded py-1 px-2"
      aria-label="Ir a la página de ayuda y soporte"
    >
      <svg 
        xmlns="http://www.w3.org/2000/svg" 
        width="18" 
        height="18" 
        viewBox="0 0 24 24" 
        fill="none" 
        stroke="currentColor" 
        stroke-width="2" 
        stroke-linecap="round" 
        stroke-linejoin="round" 
        class="mr-2 flex-shrink-0"
        aria-hidden="true"
      >
        <circle cx="12" cy="12" r="10"></circle>
        <path d="M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3"></path>
        <line x1="12" y1="17" x2="12.01" y2="17"></line>
      </svg>
      Ayuda y soporte
    </a>
  </div>
</div>